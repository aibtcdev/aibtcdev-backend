name: Deploy Supabase Migrations

on:
  push:
    tags:
      - "v*"  # Trigger on version tags like v1.0.0, v2.1.3, etc.

jobs:
  deploy-migrations:
    runs-on: ubuntu-latest
    
    # Only run if we have the required secrets
    if: ${{ secrets.SUPABASE_ACCESS_TOKEN && secrets.SUPABASE_DB_URL_PRODUCTION }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history to ensure all migrations are available
          fetch-depth: 0

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Set production database URL
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL_PRODUCTION }}
        run: |
          echo "SUPABASE_DB_URL=${{ secrets.SUPABASE_DB_URL_PRODUCTION }}" >> $GITHUB_ENV
          echo "Using production database for tag deployment"

      - name: Validate migration files
        run: |
          if [ ! -d "supabase/migrations" ]; then
            echo "❌ No migrations directory found"
            exit 1
          fi
          
          migration_count=$(find supabase/migrations -name "*.sql" | wc -l)
          echo "📄 Found $migration_count migration files"
          
          if [ $migration_count -eq 0 ]; then
            echo "⚠️  No migration files found, skipping deployment"
            exit 0
          fi

      - name: Apply Supabase migrations to production
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "🚀 Deploying migrations to production database..."
          supabase db push --db-url $SUPABASE_DB_URL
          echo "✅ Migrations deployed successfully!"

      - name: Log deployment details
        run: |
          echo "📊 Deployment Summary:"
          echo "- Tag: ${{ github.ref_name }}"
          echo "- Commit: ${{ github.sha }}"
          echo "- Actor: ${{ github.actor }}"
          echo "- Timestamp: $(date -u)"

  # Optional: Deploy to staging environment for pre-release tags
  deploy-staging:
    runs-on: ubuntu-latest
    
    # Only run for pre-release tags (e.g., v1.0.0-beta.1, v1.0.0-rc.1)
    if: ${{ contains(github.ref_name, '-') && secrets.SUPABASE_DB_URL_STAGING }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Set staging database URL
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL_STAGING }}
        run: |
          echo "SUPABASE_DB_URL=${{ secrets.SUPABASE_DB_URL_STAGING }}" >> $GITHUB_ENV
          echo "Using staging database for pre-release tag"

      - name: Apply Supabase migrations to staging
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "🧪 Deploying migrations to staging database..."
          supabase db push --db-url $SUPABASE_DB_URL
          echo "✅ Staging migrations deployed successfully!"